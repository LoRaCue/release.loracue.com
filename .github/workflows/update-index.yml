name: Update Release Index

on:
  repository_dispatch:
    types: [new_release]
  workflow_dispatch:
  schedule:
    # Run every 6 hours to catch any missed updates
    - cron: '0 */6 * * *'

permissions:
  contents: write

jobs:
  update-index:
    runs-on: ubuntu-latest
    name: Generate releases.json
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 1
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: pip install cryptography requests
    
    - name: Generate releases index
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SIGNING_KEY: ${{ secrets.FIRMWARE_SIGNING_KEY }}
      run: |
        # Save private key to temp file
        echo "$SIGNING_KEY" > /tmp/signing_key.pem
        chmod 600 /tmp/signing_key.pem
        
        # Generate index
        python3 scripts/generate_releases_index.py \
          "$GITHUB_TOKEN" \
          "keys/firmware_public.pem" \
          "/tmp/signing_key.pem"
        
        # Clean up private key
        rm -f /tmp/signing_key.pem
    
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet public/releases.json; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No changes to releases.json"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Changes detected in releases.json"
        fi
    
    - name: Commit and push changes
      if: steps.changes.outputs.changed == 'true'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add public/releases.json
        git commit -m "chore: update releases index [skip ci]"
        git push
    
    - name: Trigger Vercel deployment
      if: steps.changes.outputs.changed == 'true'
      run: |
        echo "âœ“ Changes pushed, Vercel will auto-deploy"
